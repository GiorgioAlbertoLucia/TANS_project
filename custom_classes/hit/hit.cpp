#include "hit.hpp"
#include <TMath.h>
#include <TRandom3.h>

#ifdef MAKECINT
#include <vector>
#pragma link C++ class vector<Hit>+;
#endif

ClassImp(Hit)


void Hit::smearing()
{
    fZ += gRandom->Gaus(0., 0.0120);

    double phi;
    const double r = this->evalRadius();

    if(fX > 0)  phi = atan(fY/fZ);
    else        phi = atan(fY/fX) + TMath::Pi();
    phi += gRandom->Gaus(0.,0.003)/r;
    
    fX = r * cos(phi);
    fY = r * sin(phi);
}

/**
 * @brief Initializes the hit as generated by noise in a cylindrical detector of given radius. 
 * (z coordinate is generated from a uniform distribution on the detector lenght, 
 * the azimuthal angle is generated from a uniform distribution in [0, 2Ï€])
 * 
 * @param detectorRadius 
 */
void Hit::noise(const double detectorRadius, const double detectorLenght)
{
    fZ = gRandom->Rndm()*detectorLenght-(detectorLenght/2.);
    double phi = gRandom->Rndm()*2*TMath::Pi();
    fX = detectorRadius * cos(phi);
    fY = detectorRadius * sin(phi);
}
